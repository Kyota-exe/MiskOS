From e441a5993c21bad3fddafea172e12780decdf1f2 Mon Sep 17 00:00:00 2001
From: Kyota Poeti <kyota.exe@gmail.com>
Date: Sat, 14 May 2022 16:11:02 -0400
Subject: [PATCH 1/1] Replace HAVE_SELECT and HAVE_PSELECT with 0

---
 include/posixselect.h      |  4 ++--
 lib/readline/input.c       | 16 ++++++++--------
 lib/readline/parens.c      |  2 +-
 lib/readline/posixselect.h |  4 ++--
 lib/sh/input_avail.c       | 18 +++++++++---------
 lib/sh/ufuncs.c            | 10 +++++-----
 6 files changed, 27 insertions(+), 27 deletions(-)

diff --git a/include/posixselect.h b/include/posixselect.h
index da6a1ac..92abff2 100644
--- a/include/posixselect.h
+++ b/include/posixselect.h
@@ -21,11 +21,11 @@
 #ifndef _POSIXSELECT_H_
 #define _POSIXSELECT_H_
 
-#if defined (FD_SET) && !defined (HAVE_SELECT)
+#if defined (FD_SET) && !0
 #  define HAVE_SELECT 1
 #endif
 
-#if defined (HAVE_SELECT)
+#if 0
 #  if !defined (HAVE_SYS_SELECT_H) || !defined (M_UNIX)
 #    include <sys/time.h>
 #  endif
diff --git a/lib/readline/input.c b/lib/readline/input.c
index 61b0fde..497cdf9 100644
--- a/lib/readline/input.c
+++ b/lib/readline/input.c
@@ -78,7 +78,7 @@ extern int errno;
 #  define O_NDELAY O_NONBLOCK	/* Posix style */
 #endif
 
-#if defined (HAVE_PSELECT)
+#if 0
 extern sigset_t _rl_orig_sigset;
 #endif
 
@@ -214,7 +214,7 @@ rl_gather_tyi (void)
   register int tem, result;
   int chars_avail, k;
   char input;
-#if defined(HAVE_SELECT)
+#if 0
   fd_set readfds, exceptfds;
   struct timeval timeout;
 #endif
@@ -223,7 +223,7 @@ rl_gather_tyi (void)
   input = 0;
   tty = fileno (rl_instream);
 
-#if defined (HAVE_SELECT)
+#if 0
   FD_ZERO (&readfds);
   FD_ZERO (&exceptfds);
   FD_SET (tty, &readfds);
@@ -330,11 +330,11 @@ rl_set_keyboard_input_timeout (int u)
 int
 _rl_input_available (void)
 {
-#if defined(HAVE_SELECT)
+#if 0
   fd_set readfds, exceptfds;
   struct timeval timeout;
 #endif
-#if !defined (HAVE_SELECT) && defined(FIONREAD)
+#if defined(FIONREAD)
   int chars_avail;
 #endif
   int tty;
@@ -344,7 +344,7 @@ _rl_input_available (void)
 
   tty = fileno (rl_instream);
 
-#if defined (HAVE_SELECT)
+#if 0
   FD_ZERO (&readfds);
   FD_ZERO (&exceptfds);
   FD_SET (tty, &readfds);
@@ -525,7 +525,7 @@ rl_getc (FILE *stream)
 {
   int result;
   unsigned char c;
-#if defined (HAVE_PSELECT)
+#if 0
   sigset_t empty_set;
   fd_set readfds;
 #endif
@@ -541,7 +541,7 @@ rl_getc (FILE *stream)
 	return (_getch ());	/* "There is no error return." */
 #endif
       result = 0;
-#if defined (HAVE_PSELECT)
+#if 0
       FD_ZERO (&readfds);
       FD_SET (fileno (stream), &readfds);
 #  if defined (HANDLE_SIGNALS)
diff --git a/lib/readline/parens.c b/lib/readline/parens.c
index af47977..220d067 100644
--- a/lib/readline/parens.c
+++ b/lib/readline/parens.c
@@ -114,7 +114,7 @@ rl_insert_close (int count, int invoking_key)
     _rl_insert_char (count, invoking_key);
   else
     {
-#if defined (HAVE_SELECT)
+#if 0
       int orig_point, match_point, ready;
       struct timeval timer;
       fd_set readfds;
diff --git a/lib/readline/posixselect.h b/lib/readline/posixselect.h
index da6a1ac..92abff2 100644
--- a/lib/readline/posixselect.h
+++ b/lib/readline/posixselect.h
@@ -21,11 +21,11 @@
 #ifndef _POSIXSELECT_H_
 #define _POSIXSELECT_H_
 
-#if defined (FD_SET) && !defined (HAVE_SELECT)
+#if defined (FD_SET) && !0
 #  define HAVE_SELECT 1
 #endif
 
-#if defined (HAVE_SELECT)
+#if 0
 #  if !defined (HAVE_SYS_SELECT_H) || !defined (M_UNIX)
 #    include <sys/time.h>
 #  endif
diff --git a/lib/sh/input_avail.c b/lib/sh/input_avail.c
index 695165f..0db1d05 100644
--- a/lib/sh/input_avail.c
+++ b/lib/sh/input_avail.c
@@ -33,7 +33,7 @@
 #  include <sys/file.h>
 #endif /* HAVE_SYS_FILE_H */
 
-#if defined (HAVE_PSELECT)
+#if 0
 #  include <signal.h>
 #endif
 
@@ -67,7 +67,7 @@ input_avail (fd)
      int fd;
 {
   int result, chars_avail;
-#if defined(HAVE_SELECT)
+#if 0
   fd_set readfds, exceptfds;
   struct timeval timeout;
 #endif
@@ -77,7 +77,7 @@ input_avail (fd)
 
   chars_avail = 0;
 
-#if defined (HAVE_SELECT)
+#if 0
   FD_ZERO (&readfds);
   FD_ZERO (&exceptfds);
   FD_SET (fd, &readfds);
@@ -107,10 +107,10 @@ nchars_avail (fd, nchars)
      int nchars;
 {
   int result, chars_avail;
-#if defined(HAVE_SELECT)
+#if 0
   fd_set readfds, exceptfds;
 #endif
-#if defined (HAVE_PSELECT)
+#if 0
   sigset_t set, oset;
 #endif
 
@@ -121,13 +121,13 @@ nchars_avail (fd, nchars)
 
   chars_avail = 0;
 
-#if defined (HAVE_SELECT)
+#if 0
   FD_ZERO (&readfds);
   FD_ZERO (&exceptfds);
   FD_SET (fd, &readfds);
   FD_SET (fd, &exceptfds);
 #endif
-#if defined (HAVE_SELECT) || defined (HAVE_PSELECT)
+#if 0 || 0
   sigprocmask (SIG_BLOCK, (sigset_t *)NULL, &set);
 #  ifdef SIGCHLD
   sigaddset (&set, SIGCHLD);
@@ -138,10 +138,10 @@ nchars_avail (fd, nchars)
   while (1)
     {
       result = 0;
-#if defined (HAVE_PSELECT)
+#if 0
       /* XXX - use pselect(2) to block SIGCHLD atomically */
       result = pselect (fd + 1, &readfds, (fd_set *)NULL, &exceptfds, (struct timespec *)NULL, &set);
-#elif defined (HAVE_SELECT)
+#elif 0
       sigprocmask (SIG_BLOCK, &set, &oset);
       result = select (fd + 1, &readfds, (fd_set *)NULL, &exceptfds, (struct timeval *)NULL);
       sigprocmask (SIG_BLOCK, &oset, (sigset_t *)NULL);
diff --git a/lib/sh/ufuncs.c b/lib/sh/ufuncs.c
index 4dc4853..9178c37 100644
--- a/lib/sh/ufuncs.c
+++ b/lib/sh/ufuncs.c
@@ -33,7 +33,7 @@
 extern int errno;
 #endif /* !errno */
 
-#if defined (HAVE_SELECT)
+#if 0
 #  include "posixselect.h"
 #  include "quit.h"
 #  include "trap.h"
@@ -83,14 +83,14 @@ falarm (secs, usecs)
 /* A version of sleep using fractional seconds and select.  I'd like to use
    `usleep', but it's already taken */
 
-#if defined (HAVE_TIMEVAL) && (defined (HAVE_SELECT) || defined (HAVE_PSELECT))
+#if defined (HAVE_TIMEVAL) && (0 || 0)
 int
 fsleep(sec, usec)
      unsigned int sec, usec;
 {
   int e, r;
   sigset_t blocked_sigs, prevmask;
-#if defined (HAVE_PSELECT)
+#if 0
   struct timespec ts;
 #else
   struct timeval tv;
@@ -101,7 +101,7 @@ fsleep(sec, usec)
   sigaddset (&blocked_sigs, SIGCHLD);
 #  endif
 
-#if defined (HAVE_PSELECT)
+#if 0
   ts.tv_sec = sec;
   ts.tv_nsec = usec * 1000;
 #else
@@ -112,7 +112,7 @@ fsleep(sec, usec)
 
   do
     {
-#if defined (HAVE_PSELECT)
+#if 0
       r = pselect(0, (fd_set *)0, (fd_set *)0, (fd_set *)0, &ts, &blocked_sigs);
 #else
       sigprocmask (SIG_SETMASK, &blocked_sigs, &prevmask);
-- 
2.25.1

